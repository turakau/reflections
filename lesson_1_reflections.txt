How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me see what was changed clearly and any blatant typos were easy to spot and fix.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It allows you really take in what mistakes and poor habits you've made previously which helps you optimize future code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: you have a logical flow and easier to follow format where all changes are documented in a readable manner. 

Cons: Arbitrary judgement call on when to make a commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

It makes it easier to keep all files that are related in the same frame of reference and makes handling them easier, for example, each repository is a snapshot of the current build and if all files were not commited together it may not run correctly (because you would want to commit at a logical step).

How might using version control make you more confident to make changes that could break something?

It gives you a safe state to return to after performing any experimental actions.

